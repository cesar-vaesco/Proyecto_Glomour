package com.glamour.restapi.controllers;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.glamour.restapi.entity.Usuario;
import com.glamour.restapi.repository.UsuariosRepository;

@RestController
@RequestMapping("${url.usuario}")
public class usuarioController {

	@Autowired
	private UsuariosRepository usuariosRepository;

	@GetMapping("/usuarios")
	public ResponseEntity<List<Usuario>> listarUsuarios() {

		List<Usuario> usuarios = new ArrayList<Usuario>();

		if (usuarios.isEmpty()) {
			return new ResponseEntity<>(HttpStatus.NO_CONTENT);
		}

		return new ResponseEntity<>(usuariosRepository.findAll(), HttpStatus.OK);
	}
	
	@GetMapping("/saludo")
	public String saludo() {
		return "Este es un saludo";
	}
}

/*
 * @GetMapping("/tutorials") public ResponseEntity<List<Tutorial>>
 * getAllTutorials(@RequestParam(required = false) String title) { try {
 * List<Tutorial> tutorials = new ArrayList<Tutorial>();
 * 
 * if (title == null) tutorialRepository.findAll().forEach(tutorials::add); else
 * tutorialRepository.findByTitleContaining(title).forEach(tutorials::add);
 * 
 * if (tutorials.isEmpty()) { return new
 * ResponseEntity<>(HttpStatus.NO_CONTENT); }
 * 
 * return new ResponseEntity<>(tutorials, HttpStatus.OK); } catch (Exception e)
 * { return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR); } }
 * 
 */